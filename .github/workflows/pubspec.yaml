name: iOS-ipa-build

on:
  workflow_dispatch:

jobs:
  build-ios:
    name: 🎉 iOS Build
    runs-on: macos-latest
    steps:
      # Clona el repositorio
      - uses: actions/checkout@v3

      # Instala Flutter usando el canal estable y la arquitectura x64
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64

      # Verifica si ya existe el proyecto Flutter. Si no, lo crea automáticamente.
      - name: Create Flutter project if not exists
        run: |
          if [ ! -f pubspec.yaml ]; then
            flutter create .
          fi

      # Paso de depuración: listar el contenido del directorio
      - name: List directory content
        run: |
          echo "Contenido del directorio actual:"
          ls -la

      # Paso de depuración: listar el contenido del directorio lib
      - name: List lib directory content
        run: |
          echo "Contenido del directorio lib:"
          ls -la lib

      # Reemplaza el archivo main.dart generado por el archivo Dart personalizado
      - name: Replace main.dart with custom Dart file
        run: |
          echo "Reemplazando main.dart con el archivo personalizado..."
          mv lib/leerHTML.dart lib/main.dart || echo "Error: leerHTML.dart no encontrado."

      # Verifica si el archivo HTML está en el lugar correcto (en la raíz)
      - name: Ensure HTML file exists
        run: |
          if [ ! -f mi_carnet_vip_canjear.html ]; then
            echo "Error: El archivo mi_carnet_vip_canjear.html no existe en la raíz."
            exit 1
          else
            echo "El archivo mi_carnet_vip_canjear.html existe en la raíz, moviéndolo a assets/html..."
            mkdir -p assets/html
            mv mi_carnet_vip_canjear.html assets/html/
          fi

      # Instala las dependencias del proyecto Flutter
      - name: Get dependencies
        run: flutter pub get

      # Compila la versión release de la app iOS sin firmar
      - run: flutter build ios --release --no-codesign

      # Crea el directorio Payload
      - run: mkdir Payload
        working-directory: build/ios/iphoneos

      # Mueve la app a la carpeta Payload
      - run: mv Runner.app/ Payload
        working-directory: build/ios/iphoneos

      # Comprime los archivos en un archivo IPA
      - name: Zip output
        run: zip -qq -r -9 FlutterIpaExport.ipa Payload
        working-directory: build/ios/iphoneos

      # Sube el archivo IPA a la sección de releases
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/ios/iphoneos/FlutterIpaExport.ipa
          tag: v1.0
          overwrite: true
          body: "This is first release"
