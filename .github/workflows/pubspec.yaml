name: iOS-ipa-build

on:
  workflow_dispatch:

jobs:
  build-ios:
    name: üéâ iOS Build
    runs-on: macos-latest
    steps:
      # Clona el repositorio
      - uses: actions/checkout@v3

      # Instala Flutter en una versi√≥n estable espec√≠fica
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.13.0'  # Versi√≥n estable espec√≠fica
          channel: 'stable'
          architecture: x64

      # Verifica si los archivos esenciales existen en la ra√≠z del proyecto
      - name: Verify essential files
        run: |
          if [ ! -f pubspec.yaml ]; then
            echo "Error: pubspec.yaml no encontrado en la ra√≠z del proyecto."
            exit 1
          fi
          if [ ! -f leerHTML.dart ]; then
            echo "Error: leerHTML.dart no encontrado en la ra√≠z del proyecto."
            exit 1
          fi
          if [ ! -f mi_carnet_vip_canjear.html ]; then
            echo "Error: mi_carnet_vip_canjear.html no encontrado en la ra√≠z del proyecto."
            exit 1
          fi
          echo "Todos los archivos esenciales est√°n en su lugar."

      # Crea el proyecto si no tiene la carpeta ios
      - name: Create Flutter project if not exists
        run: |
          if [ ! -d ios ]; then
            echo "La carpeta ios no se encontr√≥. Creando la estructura de proyecto Flutter..."
            flutter create .
          fi

      # Mueve `leerHTML.dart` a `lib/main.dart`
      - name: Set leerHTML.dart as main file
        run: |
          mkdir -p lib
          mv leerHTML.dart lib/main.dart

      # Mueve el archivo HTML a la carpeta de assets
      - name: Move HTML file and update pubspec.yaml
        run: |
          mkdir -p assets/html
          mv mi_carnet_vip_canjear.html assets/html/mi_carnet_vip_canjear.html

      # Limpia el proyecto para evitar problemas de cach√©
      - name: Clean Flutter build
        run: flutter clean

      # Elimina el archivo pubspec.lock si existe
      - name: Remove pubspec.lock if exists
        run: |
          if [ -f pubspec.lock ]; then
            echo "Eliminando pubspec.lock para regenerarlo..."
            rm pubspec.lock
          fi

      # Obtiene las dependencias del proyecto
      - name: Get dependencies
        run: flutter pub get

      # Espera a que se descarguen las dependencias y luego crea el parche
      - name: Create patch for flutter_layout_grid
        run: |
          cat << 'EOF' > flutter_layout_grid.patch
          --- .pub-cache/hosted/pub.dev/flutter_layout_grid-1.0.6/lib/src/widgets/placement.dart
          +++ .pub-cache/hosted/pub.dev/flutter_layout_grid-1.0.6/lib/src/widgets/placement.dart
          @@ -82 +82 @@
          - AbstractNode? node = someRenderObject;
          + AbstractNode? node = someRenderObject as AbstractNode?;
          EOF

      # Aplica el parche al archivo de flutter_layout_grid
      - name: Apply patch for flutter_layout_grid
        run: patch -p0 < flutter_layout_grid.patch

      # Compila la app iOS en modo release sin firmar
      - name: Build iOS app
        run: flutter build ios --release --no-codesign

      # Crea el directorio Payload y mueve la app
      - name: Create Payload directory
        run: mkdir Payload
        working-directory: build/ios/iphoneos
      
      - name: Move app to Payload
        run: mv Runner.app Payload
        working-directory: build/ios/iphoneos

      # Comprime los archivos en un archivo IPA
      - name: Zip output
        run: zip -qq -r -9 FlutterIpaExport.ipa Payload
        working-directory: build/ios/iphoneos

      # Sube el archivo IPA a la secci√≥n de releases
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/ios/iphoneos/FlutterIpaExport.ipa
          tag: v1.0
          overwrite: true
          body: "This is the first release of the HTML renderer app."
