name: iOS-ipa-build

on:
  workflow_dispatch:

jobs:
  build-ios:
    name: üéâ iOS Build
    runs-on: macos-latest
    steps:
      # Clona el repositorio
      - uses: actions/checkout@v3

      # Paso de depuraci√≥n: listar el contenido del directorio para verificar la estructura inicial
      - name: List directory content after checkout
        run: |
          echo "Contenido del directorio despu√©s del checkout:"
          ls -la

      # Instala Flutter usando el canal estable y la arquitectura x64
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64

      # Verifica si ya existe el proyecto Flutter. Si no, lo crea autom√°ticamente.
      - name: Create Flutter project if not exists
        run: |
          if [ ! -f pubspec.yaml ]; then
            flutter create .
          fi

      # Listar contenido del directorio despu√©s de crear el proyecto
      - name: List directory content after project creation
        run: |
          echo "Contenido del directorio despu√©s de la creaci√≥n del proyecto:"
          ls -la

      # Aseg√∫rate de que el archivo leerHTML.dart exista en la ruta correcta (directamente en la ra√≠z o en lib/)
      - name: Ensure leerHTML.dart exists and move to lib/
        run: |
          if [ -f leerHTML.dart ]; then
            echo "Mover leerHTML.dart a lib/"
            mv leerHTML.dart lib/
          elif [ ! -f lib/leerHTML.dart ]; then
            echo "Error: leerHTML.dart no existe en la ra√≠z ni en lib/."
            exit 1
          fi

      # Aseg√∫rate de que el archivo HTML est√© en la ra√≠z y mu√©velo a la carpeta de assets
      - name: Ensure HTML file exists
        run: |
          if [ ! -f mi_carnet_vip_canjear.html ]; then
            echo "Error: El archivo mi_carnet_vip_canjear.html no existe en la ra√≠z."
            exit 1
          else
            echo "Moviendo el archivo mi_carnet_vip_canjear.html a assets/html..."
            mkdir -p assets/html
            mv mi_carnet_vip_canjear.html assets/html/
          fi

      # Listar el contenido del directorio para asegurarnos de que los archivos est√°n en su lugar
      - name: List directory content before build
        run: |
          echo "Contenido del directorio antes de la compilaci√≥n:"
          ls -la

      # Limpia y reinstala las dependencias del proyecto Flutter
      - name: Clean and get dependencies
        run: |
          flutter clean
          flutter pub get

      # Compila la versi√≥n release de la app iOS sin firmar
      - run: flutter build ios --release --no-codesign

      # Crea el directorio Payload
      - run: mkdir Payload
        working-directory: build/ios/iphoneos

      # Mueve la app a la carpeta Payload
      - run: mv Runner.app/ Payload
        working-directory: build/ios/iphoneos

      # Comprime los archivos en un archivo IPA
      - name: Zip output
        run: zip -qq -r -9 FlutterIpaExport.ipa Payload
        working-directory: build/ios/iphoneos

      # Sube el archivo IPA a la secci√≥n de releases
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/ios/iphoneos/FlutterIpaExport.ipa
          tag: v1.0
          overwrite: true
          body: "This is first release"
